<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="reserve">
	<insert id="insertReserve">
		INSERT INTO RESERVE_INFO VALUES(
			TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), #{member_id}, #{room_no}, #{reserve_price}, #{reserve_name}
			, #{reserve_email}, #{reserve_phone}, #{reserve_start_time}, #{reserve_end_time}
			, TO_DATE(#{reserve_date}, 'YY/MM/DD'), #{payment_method_type}, SYSDATE, #{tid}
		) <!-- 화면에서 INSERT확인 필요 TODO hhjng -->
	</insert>
	<update id="updateReserve">
		UPDATE RESERVE_INFO
		SET (ROOM_NO, RESERVE_PRICE, RESERVE_NAME
		, RESERVE_EMAIL, RESERVE_PHONE ,RESERVE_START_TIME ,RESERVE_END_TIME
		,RESERVE_COMMENT , PAYMENT_METHOD_TYPE, RESERVE_PAY, TID
		)
		= (#{room_no}, #{reserve_price}, #{reserve_name}
			, #{reserve_email}, #{reserve_phone}, #{reserve_start_time}, #{reserve_start_time}
			, #{reserve_date}, #{payment_method_type}, #{reserve_pay}, #{tid}
			)
		WHERE MEMBER_ID=#{member_id} AND RESERVE_NO=#{reserve_no}
	</update>
	<delete id="deleteReserve" parameterType="map">
		DELETE FROM RESERVE_INFO WHERE MEMBER_ID=#{member_id} AND RESERVE_NO=#{reserve_no}
	</delete>
	<select id="selectReserve" resultType="ReserveInfo" parameterType="map">
		SELECT * FROM RESERVE_INFO WHERE MEMBER_ID=#{member_id} AND RESERVE_NO=#{reserve_no}
	</select>
	<select id="selectListReserve" resultType="map">
		SELECT * FROM RESERVE_INFO
	</select>
	<select id="selectListMyReserve" resultType="map">
		SELECT * FROM RESERVE_INFO WHERE MEMBER_ID=#{member_id}
	</select>
	
	<select id="selectListRoomReserve" resultType="ReserveInfo" parameterType="_int">
		SELECT RESERVE_START_TIME, RESERVE_END_TIME, TO_CHAR(RESERVE_DATE,'YYYY-MM-DD') AS RESERVE_DATE FROM RESERVE_INFO WHERE ROOM_NO=#{room_no}
	</select>
	
	<!-- cancelReserve -->
	<insert id="cancelInsert">
		INSERT INTO CANCEL_RESERVE_INFO VALUES(
			#{reserve_no}, #{member_id}, #{room_no}, #{reserve_price}, #{reserve_name}
			, #{reserve_email}, #{reserve_phone}, #{reserve_start_time}, #{reserve_end_time}
			, TO_DATE(#{reserve_date}, 'YY/MM/DD'), #{payment_method_type}, #{reserve_pay}, #{tid}
		)
	</insert>
	<delete id="cancelDelete">
		DELETE FROM CANCEL_RESERVE_INFO WHERE MEMBER_ID=? AND RESERVE_NO=?
	</delete>
	<select id="cancelSelectReserve" resultType="CancelReserveInfo" parameterType="map">
		SELECT * FROM CANCEL_RESERVE_INFO WHERE MEMBER_ID=#{member_id} AND RESERVE_NO=#{reserve_no}
	</select>
	<select id="cancelSelectListReserve" resultType="map">
		SELECT * FROM CANCEL_RESERVE_INFO
	</select>
	
	<!-- adminPage - homin -->
	<select id="selectAreaMonthCnt" resultType="ReserveChart" parameterType="map">
		SELECT TO_CHAR(b.dt, 'YYYY-MM') AS chart_date
		     , NVL(SUM(a.cnt), 0) chart_cnt
		  FROM ( SELECT TO_CHAR(reserve_date, 'YYYY-MM-DD') AS chart_date
		              , COUNT(*) cnt
		           FROM reserve_info
		          WHERE room_no in (select room_no from study_room 
			          						where p_no in (select p_no from place_info 
			          											<if test="area_code != 0">
			          												where area_code 
			          												<choose>
				          												<when test="area_code == 99">
				          													in (select area_code from area where SIDO_NAME = #{sido_name})
				          												</when>
				          												<otherwise>
				          													= #{area_code}
				          												</otherwise>
			          												</choose>
			          											</if>
			          									   )
			          					)
		                     and reserve_date BETWEEN add_months(TRUNC(SYSDATE, 'MM'), -5)
		                             AND LAST_DAY(SYSDATE)
		          GROUP BY reserve_date
		        ) a
		 <![CDATA[
		      , ( SELECT add_months(TRUNC(SYSDATE, 'MM'), -5) + LEVEL - 1 AS dt
		            FROM dual 
		         CONNECT BY LEVEL <= LAST_DAY(SYSDATE)
		                            - (add_months(TRUNC(SYSDATE, 'MM'), -5) + 1)
		        ) b
		  WHERE b.dt = a.chart_date(+)
		  GROUP BY TO_CHAR(b.dt, 'YYYY-MM')
		  ORDER BY TO_CHAR(b.dt, 'YYYY-MM')
		]]>
	</select>
	<select id="selectAreaMonthPrice" resultType="ReserveChart" parameterType="map">
			SELECT TO_CHAR(b.dt, 'YYYY-MM') AS chart_date
			     , NVL(SUM(a.price), 0) chart_price
			  FROM ( SELECT TO_CHAR(reserve_date, 'YYYY-MM-DD') AS chart_date
			              , sum(reserve_price) price
			           FROM reserve_info
			          WHERE room_no in (select room_no from study_room 
			          						where p_no in (select p_no from place_info 
			          											<if test="area_code != 0">
			          												where area_code 
			          												<choose>
				          												<when test="area_code == 99">
				          													in (select area_code from area where SIDO_NAME = #{sido_name})
				          												</when>
				          												<otherwise>
				          													= #{area_code}
				          												</otherwise>
			          												</choose>
			          											</if>
			          									   )
			          					)
			                     and reserve_date BETWEEN add_months(TRUNC(SYSDATE, 'MM'), -5)
			                             AND LAST_DAY(SYSDATE)
			          GROUP BY reserve_date
			        ) a
		<![CDATA[
			      , ( SELECT add_months(TRUNC(SYSDATE, 'MM'), -5) + LEVEL - 1 AS dt
			            FROM dual 
			         CONNECT BY LEVEL <= LAST_DAY(SYSDATE)
			                            - (add_months(TRUNC(SYSDATE, 'MM'), -5) + 1)
			        ) b
			  WHERE b.dt = a.chart_date(+)
			  GROUP BY TO_CHAR(b.dt, 'YYYY-MM')
			  ORDER BY TO_CHAR(b.dt, 'YYYY-MM')
		]]>
	</select>
</mapper>
