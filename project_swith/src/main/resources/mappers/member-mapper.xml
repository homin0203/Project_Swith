<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">
	<insert id="insertMember" parameterType="Member">
		INSERT INTO USER_INFO VALUES(
			#{member_id}, #{member_pwd}, #{member_name}, #{email}, #{hnd_no}, #{post_no}
			, #{add1}, #{add2}, #{agree1}, #{agree2}, #{agree3}, 'ROLE_USER', 1, DEFAULT, NULL
		)
	</insert>
	<update id="updateMember" parameterType="Member">
		UPDATE USER_INFO
		SET MEMBER_NAME=#{member_name}, EMAIL=#{email}, HND_NO=#{hnd_no}
		, POST_NO=#{post_no}, ADD1=#{add1}, ADD2=#{add2}
		, AGREE1=#{agree1}, AGREE2=#{agree2}, AGREE3=#{agree3}
		WHERE MEMBER_ID=#{member_id}
	</update>
	<delete id="deleteMember" parameterType="string">
		DELETE FROM USER_INFO WHERE MEMBER_ID=#{member_id}
	</delete>
	<select id="selectMember" resultType="Member">
		SELECT * FROM USER_INFO WHERE MEMBER_ID=#{member_id}
	</select>
	<select id="selectListMember" resultType="list">
		SELECT * FROM USER_INFO
	</select>
	<!-- 계정 찾기 -->
	<select id="selectId" resultType="string">
		SELECT REPLACE(MEMBER_ID, SUBSTR(MEMBER_ID, -3), '***') FROM USER_INFO WHERE MEMBER_NAME=#{member_name} AND EMAIL=#{email}
	</select>
	<select id="selectFullId" resultType="string">
		SELECT MEMBER_ID FROM USER_INFO WHERE MEMBER_NAME=#{member_name} AND EMAIL=#{email}
	</select>
	<select id="selectPwd" resultType="int">
		SELECT COUNT(*) FROM USER_INFO WHERE MEMBER_ID=#{member_id} AND EMAIL=#{email}
	</select>
	<!-- 비밀번호 변경 -->
	<update id="updatePwd" parameterType="Member">
		UPDATE USER_INFO
		SET MEMBER_PWD=#{member_pwd}
		WHERE MEMBER_ID=#{member_id}
	</update>
	<!-- 아이디 중복체크 -->
	<select id="checkId" resultType="int">
		SELECT COUNT(*) FROM USER_INFO WHERE MEMBER_ID=#{member_id}
	</select>
	<!-- 이메일 중복체크 -->
	<select id="checkEmail" resultType="int">
		SELECT COUNT(*) FROM USER_INFO WHERE EMAIL=#{email}
	</select>
	
	<!-- security -->
	<select id="selectUserById" resultType="kh.team2.swith.member.model.vo.CustomMemberDetails">
        <![CDATA[
            SELECT
                *
            FROM
                USER_INFO
            WHERE
                MEMBER_ID=#{member_id}
        ]]>
    </select>
    <update id="updateFailureCount">
        <![CDATA[
            UPDATE
                USER_INFO
            SET
                FAILURE_CNT = FAILURE_CNT + 1
            WHERE
                MEMBER_ID = #{ member_id}
        ]]>
    </update>
    
        <select id="checkFailureCount" resultType="Integer">
        <![CDATA[
            SELECT
                FAILURE_CNT
            FROM
                USER_INFO
            WHERE
                MEMBER_ID=#{ member_id}
        ]]>
    </select>
    
    <update id="updateFailureCountReset">
    <![CDATA[
        UPDATE
            USER_INFO
        SET
            FAILURE_CNT = 0
        WHERE
            MEMBER_ID = #{ member_id}
    ]]>
</update>

<!-- stdInfo member -->
	<select id="countCheckAdmin" resultType="_int">
		SELECT COUNT(*) FROM USER_INFO WHERE MEMBER_ID=#{member_id} AND MEMBER_AUTH='ROLE_ADMIN'
	</select>

<!-- INFROM -->
<insert id="insertInform" parameterType="Inform">
	insert into inform values(inform_seq.nextval, #{member_id}, #{inform_content}, default)
</insert>
<!-- 관리자페이지 스터디 카페/스터디룸 삭제 시 알람 추가 -->
<insert id="insertInformDeletePlace" parameterType="_int">
	insert into inform select inform_seq.nextval ,r.member_id, concat(concat(concat(to_char(r.reserve_date,'yyyy-mm-dd'),' 날짜에 '),ps.p_name),'의 예약이 해당 지점 사정으로 인해 취소되었습니다')
    from cancel_reserve_info r join (select s.*,p.p_name from place_info p join study_room s on p.p_no=s.p_no) ps on r.room_no=ps.room_no
    where r.RESERVE_DATE >= to_char(sysdate,'yyyy/mm/dd')
        and r.room_no in (select room_no from STUDY_ROOM where p_no = #{p_no})
</insert>
<insert id="insertInformDeleteRoom" parameterType="_int">
	insert into inform select inform_seq.nextval ,r.member_id, concat(concat(concat(to_char(r.reserve_date,'yyyy-mm-dd'),' 날짜에 '),ps.p_name),'의 예약이 해당 지점 사정으로 인해 취소되었습니다')
    from cancel_reserve_info r join (select s.*,p.p_name from place_info p join study_room s on p.p_no=s.p_no) ps on r.room_no=ps.room_no
    where r.RESERVE_DATE >= to_char(sysdate,'yyyy/mm/dd')
        and r.room_no = #{room_no}
</insert>
<update id="updateInfromCheck" parameterType="_int">
	update inform
		set inform_check = 2
		where inform_no=#{inform_no}
</update>
<select id="selectListInform" parameterType="string" resultType="Inform">
	select * from inform where member_id=#{member_id} and inform_check = 1
</select>
<!-- 관리자페이지 회원 관리 -->
	<select id="selectListMemberAdmin" parameterType="map" resultType="MemberProfile">
		select u.MEMBER_ID, u.MEMBER_PWD, u.MEMBER_NAME, u.EMAIL, u.HND_NO, u.POST_NO, u.ADD1, u.ADD2, u.AGREE1, u.AGREE2, u.AGREE3, u.MEMBER_AUTH, u.ENABLED, u.STATUS_DATE, u.FAILURE_CNT, p.NICK_NAME, p.INTRO, pi.PROFILE_IMG_ORIGIN, pi.PROFILE_IMG_SAVE, pi.PROFILE_IMG_ROUTE
    			from USER_INFO u join PROFILE p on u.MEMBER_ID = p.MEMBER_ID
                              	 join PROFILE_IMG pi on u.MEMBER_ID = pi.MEMBER_ID
		    <if test='!"전체".equals(member_serch_type)'>
		    	<choose>
					<when test='"아이디".equals(member_serch_type)'>
		   				where u.MEMBER_ID Like '%'||#{member_keyword}||'%'
					</when>
					<when test='"이름".equals(member_serch_type)'>
		   				where u.MEMBER_NAME Like '%'||#{member_keyword}||'%'
					</when>
					<when test='"닉네임".equals(member_serch_type)'>
		   				where p.NICK_NAME Like '%'||#{member_keyword}||'%'
					</when>
				</choose>
		    </if>
		    order by u.MEMBER_NAME asc
	</select>
	<select id="selectMemberCountAdmin" parameterType="map" resultType="_int">
		select count(*) 
		    from USER_INFO u join PROFILE p on u.MEMBER_ID = p.MEMBER_ID
                             join PROFILE_IMG pi on u.MEMBER_ID = pi.MEMBER_ID
		    <if test='!"전체".equals(member_serch_type)'>
		    	<choose>
					<when test='"아이디".equals(member_serch_type)'>
		   				where u.MEMBER_ID Like '%'||#{member_keyword}||'%'
					</when>
					<when test='"이름".equals(member_serch_type)'>
		   				where u.MEMBER_NAME Like '%'||#{member_keyword}||'%'
					</when>
					<when test='"닉네임".equals(member_serch_type)'>
		   				where p.NICK_NAME Like '%'||#{member_keyword}||'%'
					</when>
				</choose>
		    </if>
	</select>
</mapper>